# Generated by Django 5.2.6 on 2025-09-28 13:38

import colorfield.fields
import django.db.models.deletion
import smart_selects.db_fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                ("serial", models.IntegerField(blank=True, null=True)),
                ("display_at_bar", models.BooleanField(default=False)),
                ("category_adding_date", models.DateTimeField(auto_now_add=True)),
            ],
            options={"verbose_name_plural": "Categories",},
        ),
        migrations.CreateModel(
            name="AttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=120)),
                ("slug", models.SlugField(blank=True, max_length=140)),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="store.attribute",
                    ),
                ),
            ],
            options={"unique_together": {("attribute", "value")},},
        ),
        migrations.CreateModel(
            name="brandsOrTypesOfSubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.category"
                    ),
                ),
            ],
            options={"verbose_name_plural": "Types of Sub Categories",},
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("name", models.CharField(max_length=200)),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=200,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("product_adding_date", models.DateTimeField(auto_now_add=True)),
                ("regular_price", models.DecimalField(decimal_places=0, max_digits=10)),
                (
                    "special_price",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=10, null=True
                    ),
                ),
                ("stock", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_stock", "In Stock"),
                            ("pre_order", "Pre Order"),
                            ("up_coming", "Up Coming"),
                            ("out_of_stock", "Out of Stock"),
                        ],
                        default="in_stock",
                        max_length=20,
                    ),
                ),
                ("product_code", models.CharField(max_length=100, unique=True)),
                ("brand", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                ("specification", models.TextField()),
                ("description", models.TextField()),
                ("warranty", models.CharField(default="1 Year", max_length=100)),
                ("warranty_details", models.TextField(blank=True, null=True)),
                (
                    "product_image",
                    models.ImageField(blank=True, null=True, upload_to="Products/"),
                ),
                (
                    "primary_brand_or_type",
                    smart_selects.db_fields.ChainedForeignKey(
                        auto_choose=True,
                        blank=True,
                        chained_field="primary_sub_category",
                        chained_model_field="sub_category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_products",
                        to="store.brandsortypesofsubcategory",
                    ),
                ),
                (
                    "primary_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_products",
                        to="store.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "brand_or_type",
                    smart_selects.db_fields.ChainedForeignKey(
                        auto_choose=True,
                        blank=True,
                        chained_field="sub_category",
                        chained_model_field="sub_category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="productcategory_brands_or_types",
                        to="store.brandsortypesofsubcategory",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.category"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.product"
                    ),
                ),
            ],
            options={"verbose_name_plural": "Product Categories",},
        ),
        migrations.AddField(
            model_name="product",
            name="brands_or_types",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_in_product",
                through="store.ProductCategory",
                to="store.brandsortypesofsubcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="categories",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_in_product",
                through="store.ProductCategory",
                to="store.category",
            ),
        ),
        migrations.CreateModel(
            name="ProductColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("color_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "color_code",
                    colorfield.fields.ColorField(
                        blank=True,
                        default=None,
                        image_field=None,
                        max_length=7,
                        null=True,
                        samples=None,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="colors",
                        to="store.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="Products/")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="store.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductSize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.CharField(max_length=20)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sizes",
                        to="store.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="subCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.category"
                    ),
                ),
            ],
            options={"verbose_name_plural": "Sub Categories",},
        ),
        migrations.AddField(
            model_name="productcategory",
            name="sub_category",
            field=smart_selects.db_fields.ChainedForeignKey(
                auto_choose=True,
                blank=True,
                chained_field="category",
                chained_model_field="category",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="productcategory_subcategories",
                to="store.subcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="primary_sub_category",
            field=smart_selects.db_fields.ChainedForeignKey(
                auto_choose=True,
                blank=True,
                chained_field="primary_category",
                chained_model_field="category",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="primary_products",
                to="store.subcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="sub_categories",
            field=models.ManyToManyField(
                blank=True,
                related_name="products_in_product",
                through="store.ProductCategory",
                to="store.subcategory",
            ),
        ),
        migrations.AddField(
            model_name="brandsortypesofsubcategory",
            name="sub_category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="store.subcategory"
            ),
        ),
        migrations.CreateModel(
            name="Variant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        blank=True, max_length=120, null=True, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "attribute_values",
                    models.ManyToManyField(
                        related_name="variants", to="store.attributevalue"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="store.product",
                    ),
                ),
            ],
            options={"ordering": ("-created_at",),},
        ),
        migrations.AlterUniqueTogether(
            name="productcategory",
            unique_together={("product", "category", "sub_category", "brand_or_type")},
        ),
        migrations.CreateModel(
            name="VariantColorStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stock", models.PositiveIntegerField(default=0)),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="store.productcolor",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="color_stocks",
                        to="store.variant",
                    ),
                ),
            ],
            options={"unique_together": {("variant", "color")},},
        ),
    ]
